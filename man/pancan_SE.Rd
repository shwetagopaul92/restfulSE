% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pancan_SE.R
\name{pancan_SE}
\alias{pancan_SE}
\title{illustrate DelayedArray assay from BigQuery backend in SummarizedExperiment}
\usage{
pancan_SE(bqcon, colDataTableName = "clinical_PANCAN_patient_with_followup",
  colDSubjectIdName = "bcr_patient_barcode", colDFilterField = "acronym",
  colDFilterValue = "BRCA",
  assayDataTableName = "pancanMiRs_EBadjOnProtocolPlatformWithoutRepsWithUnCorrectMiRs_08_04_16_annot",
  assayFeatureName = "ID", subjectIDName = "ParticipantBarcode",
  tumorFieldName = "Study", tumorFieldValue = "BRCA",
  assayValueFieldName = "miRNAexpr")
}
\arguments{
\item{bqcon}{a BigQueryConnection instance}

\item{colDataTableName}{character(1) defaulting to "clinical_PANCAN_patient_with_followup"}

\item{colDSubjectIdName}{character(1) defaulting to "bcr_patient_barcode"}

\item{colDFilterField}{character(1) defaulting to "acronym"}

\item{colDFilterValue}{character(1) defaulting to "BRCA"}

\item{assayDataTableName}{character(1) defaulting to "pancanMiRs_EBadjOnProtocolPlatformWithoutRepsWithUnCorrectMiRs_08_04_16_annot"}

\item{assayFeatureName}{character(1) defaulting to "ID"}

\item{subjectIDName}{character(1) defaulting to "ParticipantBarcode"}

\item{tumorFieldName}{character(1) defaulting to "Study"}

\item{tumorFieldValue}{character(1) defaulting to "BRCA"}

\item{assayValueFieldName}{character(1) defaulting to "miRNAexpr"}
}
\value{
an instance of SummarizedExperiment
}
\description{
illustrate DelayedArray assay from BigQuery backend in SummarizedExperiment
}
\note{
The parameters need different assignments for different tables.
Field names are not standardized across tables.
}
\examples{
if (interactive() & requireNamespace("DBI") & 
   requireNamespace("bigrquery")) {
  pancan_BQ_loc = function (dataset="Annotated", 
                billing=Sys.getenv("CGC_BILLING")) 
  {
      con <- DBI::dbConnect(bigrquery::dbi_driver(), 
         project = "pancancer-atlas",         
         dataset = dataset, billing = billing)
      con     
  }
  bqcon = try(pancan_BQ_loc()) # needs CGC_BILLING in environment
  if (!inherits(bqcon, "try-error"))
     pancan_SE(bqcon)
}
}
